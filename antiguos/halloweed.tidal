
-- inicializar tidalcycles
:script "C:/Users/Lucho Alvarado/Documents/automat4/dev/automat4_set_dev2/setup.tidal"

d1 $ metro

hush

let mute p = (degradeBy 1) $ p

-- mr roboto
setcps(145/60/4)

all $ (# nudge "-0.068")

-- metro
d1 $



hush

x1 silence

d1 silence

do
  let robot = -- slow 2 $ rarely (slow 2) $
            -- $
            -- jux rev $
            jux rev $
            slow 2 $ rarely (slow 2) $
            -- rarely (plyWith "<<2 4> 3 4>" ((|* amp 0.6))) $
            s "<aaa aaa2>(<9 11>, 16, <0 2>)?0.5"
            # note (choose [55, 57, 62, 65, 67])
            |+ note "{12 0 7}%8" |+ note "<-12 0 0 7>"
            # detune "1.01 0.99" # dur 0.5
            # atk 0.4 # rel 2.8
            -- # atk 0.01 # rel 0.252
            -- # atk 0.01 # rel 0.5
            # lpfreq (slow 8 $ range 500 1500 sine) # lpres 0.4
            # rsend (range 0.9 1.0 rand) # dsend 0.9
  let liquidos = slow 2
            $ note "[<69 67 74>, <62, 64, 59>]" |+ note "<0 7 12>"
            |+ note "<12 0>"
            # s "soft" # amp 0.32 # detune "<1.01 0.991>"
            # atk 2.5 # rel 7.5
            # lpfreq 1600 # freqmod 1.01 # flutterdepth 0.985
            # rsend 1.5
  d1 $ robot |* amp (choose [0.3, 0.125, 0.05])
    |* amp 0.02 -- 0.3
  d2 $ liquidos |* amp 0.4

d1 silence



hush
-- tecno1 supercollider

-- tecno2 nuevamente
setcps(145/60/4)

hush




d1 -- $ sometimes (plyWith "1" ((|* amp 0.9) .(|*rate 2)))
  $ struct "[~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ <~ t> ~ <t ~ ~ >]/2"
  $ s "dataclap" # drive 0.5 # lpfreq 5000
  # rate 1
  +| buf "2 1 1 1"  # amp 0.1 # dsend 0.2


d3
  $ fast 1 $ plyWith (choose [2]) (
  (|* amp 0.9) .(|+ note "<5 7>")
  )
  $ sometimes (
    jux (# note (range 60 70 sine))
    )
  $ note "<[50 55]!2 ~ [50 55]>"  # feedback (range 0.5 1.5 sine)
  # s "neutron" # amp (fast 2 $ range 0.1 0.4 saw) |* amp 0.6
  |+note (choose [0, 0, 5, 7, 12])
  # atk 0.1 # rel (range 1.2 3.2 rand) |* rel 0.25
  # lpres 0.2
  # drive 0.6
  # dsend 0.8 # rsend 0.5

hush

--- parte 2

d3 $ every 2 (|* amp 0.0)
   $ almostNever (plyWith "2" ((|* amp 0.9).(|+note 7))) $ sometimes (fast 2)
    $ fast 1
    $ note "[<55 61>,58](5, 8, 2)"
    # s "ninin"
    |+ note (choose [0, 12])
  # amp 0.04 # width (range 0.01 0.6 rand)
  # feedback (range 0.6 1.5 rand)
  # dur 0.1 # lpres (range 0.01 0.7 sine)
  # lpfreq (range 1500 3500 rand)
  # atk 0.01 # rel (range 0.05 0.8 rand)
  # decay (range 0.1 0.9 rand)
  # detune 1.02 # dsend 0.7 # rsend 0.5

hush

-- tecno3
let bpm x = setcps(x/60/4)

bpm 142

d1 silence

d3 -- $ (every  (jux rev))
  -- $ rev
  $ jux (rev . (|* freq 0.5) .(|* amp 0.7) )
  $ slow 2 $ struct "~ ~ ~ t [~ ~ ~ t][~ ~ ~ ~] [t] ~ t ~"
  $ s "tecno3" # amp (fast 4 $ range 0.05 0.2 tri)
  +| freq (100 - (( run 5) *2 )) |- freq (range "-0.125" 0.125 rand)
  -- |* freq 6
  |* freq 6
  -- # atk (slow 8 $ range 0.01 0.2 sine) # rel
  -- (slow 8 $ range 0.01 0.2 rand)
  -- # decay 0.2 # sus 0.001 # rel 2
  # adsr' (sinosc 0.01 0.2 0.125) 0.1 0.1 (randosc 0.01 0.2)
  # pan (range "-0.25" 0.25 rand) # drive 0.5
  +| feedback (slow 8 $ range 0.2 1.6 tri)
  # dsend 1.5 # rsend 0.8

d4 silence

d4 $ every 8 (
  plyWith "<2 2 2 <2 2 3>>" (
    (|* amp 0.95).(|* freq "<1.5 1.5>").(# atk 1.2).(# rel 7)
    )
    )
  -- $ slow 4 $ struct "t(3, 16, 0)"
  $ struct "t/2"
  $  freq "<[300, 450]!8 [100, 150]!8> " # s "padstecno3"
  |* freq "<1.0 1.5 1.5>" # lpfreq 2500
  # atk 0.85 # rel 5.5 # dur 2.4
  # width (slow 8 $ range 0.01 0.7 sine)
  # amp (slow 8 $ range 0.1 0.3 sine) # dsend 0.25 # rsend 0.8
  # nudge (range "-0.2" 0.2 rand)

  d3 -- $ jux rev
    $ struct "t*8?0.05"
    $ s "tecno3" # amp (fast "<2 4>" $ range 0.3 0.5 tri)
    |+ freq (choose [50, 80, 100, 120, 150])
    |- freq (range "-0.25" 0.25 rand)
     |* freq 2
    # atk (slow 8 $ range 0.001 0.1 sine) # rel (slow 8 $ range 0.01 0.2 rand)
    # decay 0.01 # sus 0.0125 # rel 0.1
    # pan (range "-0.25" 0.25 rand) # drive 0.1
    +| feedback (slow 8 $ range 0.5 2.1 tri)
    # dsend 0.4 # rsend 0.3
    |* amp 0.6

-- felicidad
d4 -- $ jux rev
  $ struct "t t ~ t t t t ~ t ~"
  $ s "tecno3" # amp (fast 4 $ range 0.07 0.08 tri)
  +| freq (( run 7 + 1) *20 ) |- freq (range "-0.25" 0.25 rand)
  |* freq (choose [6])
  # atk (slow 8 $ range 0.001 0.01 sine) # rel (slow 8 $ range 0.01 0.2 rand)
  # decay 0.02 # sus 0.001 # rel 0.02
  # pan (range "-0.25" 0.25 rand) # drive 0.1
  +| feedback (slow 8 $ range 0.2 1.6 tri)
  # dsend 1.5 # rsend 0.5

d3 silence
hush
d4 silence

  setcps(150/60/4)

  x1 $ metro

  hush

  do
    let infernoise =  note "<45!3 38!5>"
                  -- note "<45!3 38!5 <59!2 <57!2 64>!2>!3>"
                  |+ note 12
                  # s "<infernoise1!12 infernoise2!12>"
                  -- # s "infernoise2"
                  # amp 0.25 # dur 2.5
                  # atk 1.3 # rel 3.5
                  # ampmodfreq (choose [1.0, 1.0, 2.0, 3.0])
                  # ampmoddepth 0.9
                  # vibratofreq 0.5
                  # vibratodepth 0.06
                  # drive 0.3 # bias 0.1 # high 0.3
                  # low 0.2
        melimpac = note ( select ("<1!8 2!8>"/2) [
                      "~ ~ 57 ~ <~ [48 50]> ~ <60 ~> ~",
                      "~ [~ 65] 64 ~ <[55 54] ~> ~ <60 ~> <~ [~ <69 ~ 71>]>"
                    ])
        impactrueno = melimpac # s "atactrueno" # amp "<0.5 1.5>"
                  |* amp 0.9
                  # atk 0.01 # decay 0.1 # rel 0.5
                  # atklpg "<0.01!2 0.02 0.04>"
                  # lpfreq (slow 8 $ range 2400 4500 sine)
                  # rsend 0.5 # dsend 0.5
                  # drive 0.4 # bias 0.01
        rayohielo = struct "t*16?0.75"
                  $ select ((
                    wchoose [
                    (1, 0.5), (2, 0.35), (3, 0.15)]
                    )/3) [
                    note "52" # amp 0.2,
                    note "55" # amp 0.1,
                    note "[<65 67>, 72]" # amp 0.2 # rel 2.5 # rsend 0.8
                    |+ note (choose [0, 12])
                    ] -- # amp 0.4
                  # s "soft" # drive 0.4 # high 0.3
                  # dsend 0.7
    d1 $ fast 2  $ infernoise |* amp 0.3 --0.7
    d2  $ rarely ( plyWith "[2 2 4?0.25 ~]" (|* amp 0.8) .(|* rel 0.9) . (|* lpfreq 0.5))
        $ every 8 (rev) $ slow 2
        $ impactrueno |* amp 0.01 # dsend 0.9 # rsend 0.5
    d3  $ mute $ degrade
      $ slow 4 $ rayohielo |* amp 0.4

  x1 $ metro
  d6 silence
  2 silence
  d3 silence
  ----------------
  -- jungler0_ ---

d1 silence
  d2 silence

-- setcps(155/60/4)

 all $ (#nudge "-0.07")

  let bassdk2 = buf "0*8" # s "dk2bass"
              # rate "<0.333!8 0.555!8>*2 ~~ 0.333*4"
              # amp 0.2 # drive 0.3 # bias 0.01 # dur 0.25
      breaks = buf "0 2 4 6 8 10 12 14 16 18 20 22 24 26 <28 [28 28]> 30"
              # s "amencutup" # amp ((run 10) / 30) # rsend 0.1 # dsend (range 0.0 0.3 rand)
              # rate "4 3 2 <1.5!4 1.33!4>" # dur 0.1 # atk 0.02
              # drive 0.8 # bias 0.1
      guitars1 = struct "t(7, 8)" $ stack[
                  buf "8" #pan "-0.7" # rate 0.3331,
                  buf "8"  # pan 0.47 # rate 0.3333
              ] # s "dk2guitar" # amp 0.1 # dur 0.2
              |* rate (choose [1.0, 1.5, 2.0, 3.0, 4.0])
              # rsend 0.7 # dsend 0.5
      guitars2 = struct "t(3, 8)" $ stack[
                  buf "4" # pan "-0.7" #rate 0.3331,
                  buf "4" # pan 0.47 # rate 0.3333
                ] # s "dk2guitar"  # amp 0.07 # dur 0.25
                |* rate (choose [1.0, 1.5, 2.0, 3.0, 0.5])
                # rsend 0.7 # dsend 0.7

  x2 silence

hush

  do
    -- x1 $ mute $ breaks
    d2 $ bassdk2
    d3  $ sometimes (|* rate "-1.0")
       $ almostNever (plyWith "<4 2>" ((|* amp 0.97)))
       $ guitars1
    d4  $ almostNever (plyWith "2" ((|* amp 0.95)))
       $ guitars2


  let breaks = buf "0 2 4 6 8 10 12 14 16 18 20 22 24 26 <28 [28 28]> 30"
             |+ buf 2
             # s "amencutup" # amp ((run 10) / 30) # rsend 0.1 # dsend (range 0.0 0.3 rand)
             # rate "4 3 2 <1.5!4 1.33!4>" # dur 0.1 # atk 0.02
             # drive 0.8 # bias 0.1
      discreet = every 4 (|- note 5)
              $ note "[62, 65, 69](3, 8 ,1)"
              # s "discreet3" # amp 0.03
              # detune 1.515
              # atk 0.01 # sus 0.5 # dur 0.35 # rel 0.25
              # rsend 0.5 # dsend 0.5
              # lpfreq 6500 # drive 0.2 # bias 0.01

  do
    let globalamp = 0.5
    d1 $ breaks |* amp globalamp
    d3 $ discreet |* amp globalamp

  do
    let kick = struct "t ~ t [~ t] ~ t t ~"
              $ buf "0" # amp 0.1 # low 0.1 # drive 0.2
        snare = buf "~ 13 ~ <13 13 14 13>"
              # amp 0.03 # drive 0.2 # low 0.2 # high 0.3
              # rsend 0.3
        ride = buf "10*8" # amp "{0.02 0.005}%8" # pan (range 0.1 0.2 rand)
        diddy = buf "<1 <2 2 3> 5>"
              # amp 0.08 # rsend 0.3
              # dsend 0.4
              # lpfreq 2000
        stuff = sometimes (# pan (range "-0.7" 0.7 rand ))
              $ buf "<<~ 12> ~!15>  1 ~ <1!7 [2 <6 8>]>"
              # amp 0.12 # rate 0.33
              # atk 0.01 # rsend 0.5 # dsend 0.9
        timbal = buf "~ ~ <~!1 [~ 9]> 9" # rate 0.331 # amp 0.1
    -- x5 silence
    d1 $ stack [
        -- kick # s "datakick" # rate 1.0,
        snare # s "dk2jungle" # rate 0.66,
        ride # s "dk2jungle" # rate 0.33,
        diddy # s "dk2jungle" # rate 0.33,
        stuff # s "dk2jungle" # rate 0.33
        -- timbal # pan "-1.0", rev $ timbal # pan "1.0"
      ]
     # lpfreq 4000 |* amp 1.0 -- 1.0

    -- x3 silence
    x4 silence

d4 silence

  do
    let strings =
                sometimes (jux ((|+ note 9). (|* amp 0.5))) $
                struct "t*8?0.01"
                -- $ buf (range 99 "<73 80>" tri)
                $ buf "[96 91 86 81 76 <86 86 98> 91 96 95 88 86 81 81 83 91 95]/2"
                -- $ buf (range 97 "<71 79>" tri )
                # s "dk2piano"
                # amp (fast 4 $ range 0.2 0.4 tri)
                # dur (slow 2 $ range 0.14 0.7 sine)
                -- # rate "[0.371, 0.555]"
                # rate 0.666 -- |* rate 0.5
                |* rate (choose [0.25, 0.25, 0.5, 0.5, 0.5, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.25])
                # atk 0.02 # rel 0.25
                # lpfreq 2200 # lpres 0.1 # drive 0.15 # bias 0.01
                # dsend 0.85 # rsend 0.9
    d3 $ strings |* amp 0.3

do
  d1 silence
  d2 silence
  d3 silence
  d5 silence


  -------------------
  -- discreto

  x5 silence

d1 silence
d2 silence
d3 silence

setcps(155/60/4)

  d4 $ slow 4 $ s "discreet"
     # freq "[<204 508>, <301 250>, <<505 552> <<600 300> 350>>]"
    # detune "1.01 0.99 <0.5 1.51>"
    # detune (slow 2 $ range 0.98 1.01 sine)
    # atk 2.5 # rel 9.5
    # lpfreq 5100 # lpres 0.6
    # amp 0.002 -- 0.025 maximo maximo
    # rsend 2.0 # dsend 0.85
    # drive 0.5

  d5 $ every 3 rev $ slow 16
    -- $ almostNever (
    -- (|+ note (12 + 7)). (|* amp 0.2). (# rsend 1.5) . (# dsend 1.2)
    -- )
    -- $ rarely (|+ note "<7 12>")
    -- $ rarely (plyWith "<2 3>" ((|* amp 0.9) . (|+ note 7)))
    $ stack [
    s "otroinvert(7, 8, <0 2>)" # detune 0.995 # pan "-1.0",
    s "otroinvert(7, 8, <2 0>)" # detune 1.005 # pan "1.0"
    ]
    # note "{58 61 63 68 70}%8"
    |+ note "<-12 -0 -12 0 -12 -5>"
    |+ note (choose [0, 7])
    # amp 0.007 -- 0.01
    # drive 0.9
    # bias 0.1
    # width (slow 2 $ range 0.7 0.95 sine)
    # lpfreq (range 1500 3500 rand) # lpres 0.2
    -- # atk 7.5 # rel 10.5
    # atk 7.5 # rel 7.5
    # dsend 1.5

hush

  x5 silence

  do
    d1 silence
    d2 silence
    d3 silence
    d4 silence
    d5 silence
    d6 silence

hush
