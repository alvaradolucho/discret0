:script "C:/Users/Lucho Alvarado/Documents/automat4/dev/automat4_set_dev2/setup.tidal"
:script "C:/Users/Lucho Alvarado/Documents/automat4/dev/automat4_set_dev3/setup.tidal"


:script "setup/setup.tidal"

let bpm x = setcps(x/60/4)

bpm 90
hush

d1$ slow 1 $ whenmod 16 4 (|+| buf "<-5 7>") $ off (1/16) ((|+ buf "<5 7 5 7 14>").(|* amp 0.6) . (|* pan "-1"))
  $ buf "[<60!16 62!16>, <65!16 67!8>]*8" # s "labsminipunk"
  # adsr' 0.01 0.1 0.15 0.5 # dsend 0.95 # rsend 0.82 # lpf' 8000 0.3
  # rate (sinosc 0.985 1.025 0.125) # pan (randosc "-1.0" 0.1) |* pan (sinosc 0.1 0.9 0.25)
  # amp (triosc 0.2 0.4 16) |* amp 0.5 |* rate 3.5
  |+ buf (choose [0, -12, 12, 7])

d2 $ stack [
  sometimes (off (1/16) (|* amp 0.9))$ struct "t*4"
  $ s "datakick" # buf (choose [2, 3, 7]) # amp 0.5 # adsr' 0.01 0.1 0.5 0.5
  --, struct "t*16" $ s "datach" +| buf (randosc 1 5) # amp 0.04 # adsr' 0.02 0.1 0.4 0.4
           ] # drive' 0.5 0.46 0.1 0.1 # rate 1 # dsend 0.3

d2 silence

d1 silence

hush

---
-- mui.selestial

bpm 133

all $ (# nudge "-0.03")

d1 $ metro

hush

let dkdrum p = (# rate 0.333) $ (# s "dk2drumkit") $ p
    muycelestial p =
      (# note "<57!12 52!2 59!4>") .
      (# detune (slow "<8 4>" $ range 0.99 1.01 tri))
      $ (# s "discreet4(<1 2>, 16)") $ p

do
  let kick =
         struct "~ t ~ ~ t t ~ ~"
        --struct "t t ~ t t t ~ t"
        $ s "amencutup" # buf 0 # atk (range 0.01 0.1 rand)
        # lpfreq 1000 # lpres 0.01 # low 0.1 # drive 0.2 # rsend 0.2
        # hpfreq 120
      snare = -- struct "~ t ~ t"
        -- sometimes (off (1/16) (|* amp 0.99)) $
        struct " <~ <~ ~ t ~>> ~ t ~ ~ ~ <[t t] t!3>~"
        $ s "amencutup" # atk (range 0.01 0.2 rand) # buf 2
        # rsend (choose [0.1, 0.7, 0.2]) # lpfreq 7000
      tambourines =  stack [
        struct "<~ t> t t t t t t t <t ~> t t t t t t t" $ buf "2" # pan "-0.7",
        struct "~ t ~ t t t t t t t t t t ~ t t" $ buf "1" # pan 0.7
        ] # s "tambourine"
  d1 -- $ sometimes (plyWith "4" (|* amp 0.99) )
    $ stack [
      kick # amp 0.3,
      snare # amp 0.4,
      slow "2 1 1" $ tambourines # amp 0.15 # lpfreq 8000
    ]
    # drive 0.3 # bias 0.02
    |* amp 0.8

d1 silence

do
  let mui = slow 2
          $ sometimes (jux rev)
          $ every 4 ((rev). (|- note "<7 5!3>"))
          $ slow 0.5 $ muycelestial $ amp 0.09 # dur 5.5
          # arp (choose [0.5, 0.5, 0.5, 1.0]) |* arp 0.75 -- 0.25
          |+ note (choose [0, 12])
          -- |+ note "-12"
          |+ note 12
          # atk 2.5 # rel 6.5 # dsend 1.5 # rsend 1.5
          # drive 0.2 # bias 0.1
          # modType (irand 7)
          # lpfreq (slow 4 $ range 600 3800 tri) # low 0.1 # high 0.2
          |* lpfreq 1.4 -- 0.3
          # lpres 0.3
          # ampmodfreq (choose [1, 2, 3, 4, 5, 6, 8, 0.5, 4])
          |* ampmodfreq 0.5
          # ampmoddepth (range 0.2 0.5 rand)
          # pan (range "-0.6" 0.6 rand)
          # vibratofreq (choose [0.5, 0.25, 1.0, 0.125, 0.25, 4, 6, 8])
          # vibratodepth (range "-0.3" 0.01 rand)
  d3 $ mui |* amp 0.01


-- nuevo jesus 2

d3 silence

d1 $ metro

bpm 133

all $ (# nudge "-0.03")

hush

do
  let dk = --sometimes (plyWith "<2 4>" ((|* amp 0.95)) . (|* rate 3) . (# dsend 0.5))
          sometimes (off (1/16) ((|* rate (sinosc 1.02 0.98 0.25)).(|* amp 0.98).(|* pan "-1.0"))) $
          -- sometimes (fast 2) $ struct "t*8" $
          buf 0 # s "<dataoh dataoh>" # rate "<1 2>" # amp "{0.25 0.15 0.05}%16"
          -- |+| rate (choose [1, 0.5, 0.25, 0.125])
          # humanize # lpf' (sinosc 1000 3000 0.125) 0.1
          # rsend (triosc 0.5 1.5 0.5) # adsr' (triosc 0.01 0.15 0.5) (randosc 0.02 0.1) 0.05 0.02
      amen = slow 1 $ struct "t*16" $ s "amencutup" # buf (run 32  * 3 +4) |* buf "<<1 1 2> <5 7>>"
          # humanize # adsr' 0.01 (randosc 0.1 0.3) 0.1 0.2 # lpf' 5000 0.05
          # rate 1.8 # rsend "0 0 2 0 0 0 0 0 0 0 0.8 0 0 0 0 0" |+ rsend 0.2
  d1 $ stack[
      degrade $  degrade $
      dk |* amp 2 # pan (randosc "-1.0" 1.0) |* pan (sinosc 0.1 0.9 0.125),
      amen # amp 0.125 # drive' 0.3 0.1 0.2 0.06
      ] # lpf' (randosc 1200 7000) (randosc 0.01 0.1)
      |* lpf' "<0.5 0.7 0.9>" 0.8
      |* lpf' 3 1.0 -- 1.4 1.0
  -- h1  $ randdk

d1 silence

do
  let fm1 = -- $ sometimes (off (1/16) (
          --(|+ note 12).(|+ note "<5 7 14>") . (# dsend 0.5) .(|* amp 0.8))
          -- )
          degrade $ degrade $
          whenmod 8 7 ((# note ((run 40) + "<40 40>")).(# dsend 0.75)) $
          struct "<t*16!4 ~!2>"
          -- $ note ((run 40) + "<40 50>")
          $ s "fm1"
          # note "46 51 53 57 60 <65 69>"
          |+ note "<0 12 19>"
          # dsend 0.85 # rsend 0.9
          # dur 0.08 # amp 0.2
          # adsr' 0.002 0.15 0.01 0.2
          # drive' 0.3 0.2 0.2 0.1
  d2 $ fm1 |* amp 0.002

  d1 silence


d3  $ off ("<1 2 0.5 0.5 0.25 0.25>"/16) ((|* amp 0.6) . (|+ note 7))
    $ every 8 ((|+ note "<12 0 0>"))
    $ note "[<69!15 67>, <72!15 74>]" # s "discreet3" # dur 0.8
    # adsr' 0.1 2.5 0.5 1.5 # amp 0.08
    # detune 0.99 # rsend 0.25 # dsend 0.8
    # vib' 0.125 0.5
    # trem' "0.25 4 8" (randosc 0.01 0.9) # modType 2
    # drive' 0.2 0.1 0.01 0.3 # width (sinosc 0.01 0.4 0.125)
    |* amp 0.5

hush

do
  d1 silence
  d2 silence

---
-- ondatabla

d3 silence

bpm 139

do
  let chord = select ("<1 1 1 1 1 2>"/2) [
                "[62, 67, 69, 72]", "[53, 65, 67, 72, 81]"
                ]
  let wv = note chord
          |+ note (choose [0, 0, -12, -12, 0, -12, 12])
          -- # buf "2"
          # buf (choose [2, 5, 7, 10])
          # amp (range 0.01 0.1 rand)
          # detune (range 0.01 0.35 rand)
          # s "wv"
          # dur (range 4.5 8.6 rand)
          # pan (range "-1.0" 1.0 rand)
          |* pan (sinosc 0.1 0.8 0.125)
          # atk (range 2.4 5 rand) # decay 0.7
          # rel (sinosc 8.5 6.5 0.25)
          # curve (range "-5" "-2" rand)
          # lpfreq (slow 8 $ range 650 3400 sine)
          # lpres (range 0.2 0.7 rand)
          # rsend 0.9 # dsend 0.98
          # tremolofreq (choose [1, 2, 0.25, 0.5])
          # tremolodepth (range 0.01 1.0 rand)
  d3 $ sometimes (
      (slow "<2 3 4 6>"). (|* dur "<4 6 8 12 16>") .
      (|* rel "<2.5 4 5 7>"))
    $ sometimes (|- note 12)
    -- $ note (chord + "<1!3 3 8>")
    $ wv # amp 0.02


d3 silence

do
  let chords = [62, 67, 69, 72, 76]
      duration = "<4 6 2>"
      -- duration = "<2 3 2>"
  d4 $ slow duration $ always (|- note 11)
    $ plyWith "2" (|* amp (range 0.7 0.99 rand))
    $ struct "t"
    $ note (choose chords )
    # s "harmonic"
    # amp (slow 12 $ range 0.1 0.3 tri) |* amp 0.5
    # dur (duration) # atk 1.5 # rel 4.5
    # lpfreq (slow 6 $ range 1200 4600 sine) # lpres 0.5
    # firstharm (choose [1, 2, 3])
    # grow (range 0.2 0.55 rand)
    # dsend 1.1 # rsend 0.8
    # freqmod 1 # octmod (choose [1, 3, 2, 4])
    # octmod 1
    # detune 1.015
    # flutter 0.3

d4 silence



do
  d3 silence
  d4 silence

  do
    let kick = struct "~ t ~ ~ t t ~ ~"
          -- struct "t t ~ t t t ~ t"
          $ s "amencutup" # buf 0 # atk (range 0.01 0.1 rand)
          # lpfreq 7000 # lpres 0.2 # low 0.05 # drive 0.2 # rsend 0.2
        snare = -- struct "~ t ~ <t [t ~ <t ~ > <t ~>]>"
          sometimes (off (1/16) (|* rate 0.99) .(|* amp 0.95) .(|* lpfreq 0.75)) $
          fast "<0.5!3 1>"
          $ struct " <~ <~ ~ t ~>> ~ t ~ ~ ~ <[t t] t!3>~"
          $ s "amencutup" # atk (range 0.01 0.05 rand) # buf 2
          -- # rate (randosc 1.9 3.7)
          # rsend (choose [0.1, 0.7, 0.2]) # lpfreq 8000
        tambourines =  stack [
          struct "<~ t> t t t t t t t <t ~> t t t t t t t" $ buf "2" # pan "-0.7",
          struct "~ t ~ t t t t t t t t t t ~ t t" $ buf "1" # pan 0.7
          ] # s "tambourine"
    d1 -- $ sometimes (plyWith "4" (|* amp 0.99) )
      $ stack [
        kick # amp 0.2,
        snare # amp 0.4,
        slow 1 $ tambourines # amp 0.26 # lpfreq 5400
      ]
      # drive 0.3 # bias 0.02
      |* amp 1.1

d1 silence
---

bpm 139

do
  let robot = -- slow 2 $ rarely (slow 2) $
            jux rev $ s "<aaa aaa2>(<9 11>, 16, <0 2>)?0.5"
            # note (choose [55, 57, 62, 65, 67])
            |+ note "{12 0 7}%8" |+ note "<-12 0 0 7>"
            # detune "1.01 0.99" # dur 0.5 |* detune 0.5
            # atk 0.4 # rel 2.8
            # lpfreq (sinosc 2200 2800 0.125) -- (slow 8 $ range 1200 4800 sine)
            # lpres 0.1
            # rsend (range 0.9 1.5 rand) # dsend 1.5
  let liquidos = slow 2
            $ note "[<69 67 74>, <62, 64, 59>]" |+ note "<0 7 12>"
            |+ note "<12 0>"
            # s "soft" # amp 0.32 # detune "<1.01 0.991>"
            # atk 2.5 # rel 7.5
            # lpfreq 1800 # freqmod 1.01 # flutterdepth 0.985
            # rsend 0.85
  d1 $ slow 2 $ rarely (slow 2) $ ((# adsr' 0.4 0.4 0.2 1.8).(|* amp 0.7))
    $ robot |* amp (choose [0.3, 0.125, 0.05])
    |* amp 0.1
    -- # adsr' 0.01 0.1 0.4 0.5 # dsend 1.2
  d2  $ liquidos |* amp 0.2

hush
d3 silence
d4 silence
---

d1 silence
d2 silence

bpm 141
all $ (#nudge "-0.05")

d1 $ stack [
  buf "<[11*4]!7 [11*16]?0.25>" # amp 0.3
  -- buf "[~ <18!3 [19 19]>]*4" # amp 0.03 # rsend 0.8 # pan (choose [-0.75, 0.75, 0.0])
  ]
  # s "datakick" # drive 0.7 # bias 0.3 |* amp 1 # lpfreq 4500 # lpres 0.1
  # adsr' 0.02 0.1 0.1 0.1

d2 silence

do
  let filmbass = select ("<1!16 2!16 3!16>"/3) [
              note "46 46 46 46 46 45 45 45 45 45 45 45 45 45 45 45",
              -- note "48 48 48 48 48 49 48 48 48 48 48 48 49 48 48 49",
              note "39 51 50 50 <39 47> 51 50 50 39 51 50 50 39 51 50 50"
              ]
            # s "filmbassNuevo"  |+ note "-12 0"
            # detune (randosc 0.97 1.03)
            # adsr' (triosc 0.001 0.01 0.25) 0.1 (triosc 0.01 0.5 0.25) 0.1
            # feedback "2.2 0.8 <1.6 3.4> 2.8"
            # width (sinosc 0.001 0.1 0.125)
            # lpf' (sawosc 1000 300 0.125) (sinosc 0.7 0.9 0.125)
      filmdiscreet = slow 4
            $ select ("<1!16 1!16>"/2) [
                struct ("<t(3, 8, 0) t(5, 8, 0)>")
                $ note "<[74, 77]!2 [74, 76]!2>"
                , struct "t(<2 4>, 8, 0)"
                $ note "<[79, 77]!4 [69, 74, 83]!4 [79, 77]!4 [71, 74, 81]!4 >"
                # vib' 2 0.5 # trem' 2 0.2
                ]
            # s "discreet3"
            # detune "0.99 1.01 1.005"
            # adsr' 0.1 0.2 0.4 0.8
            # rsend 1.4 # dsend 1.5
  d2 $ mute $ filmbass # amp 0.01  # drive' 0.5 0.2 0.3 0.3 # dur 0.07 |* feedback 1.1
     -- |+ note "-12"
    -- |+ note "-12"
  d3 $ degrade $ degrade $ off (1/16) ((|+ note (choose [0, 7, 12])). (|* amp 0.65))
    $ off (1/8) ((|+ note 0). (|* amp 0.5))
    $ filmdiscreet # amp 0.03 # lpf' 3500 0.4


d1 silence
d2 silence

d3 silence

hush

-- tecno01


d3 silence

d2 silence
--------------
-- tecno2

bpm 143

d2 silence

hush

d1 -- $ sometimes (plyWith "1" ((|* amp 0.9) .(|*rate 2)))
  $ struct "[~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ <~ t> ~ <t ~ ~ >]/2"
  $ buf "2 1 1 1"
  # s "dataclap" # drive 0.5 # lpfreq 5000
  # rate 1
  # amp 0.0575 # dsend 0.1

do
  let neutron = plyWith (choose [2]) (
              (|* amp 0.9) .(|+ note "<5 7>")
              )
              $ sometimes (
                jux (# note (range 60 70 sine))
                )
              $ note "<[50 55]!2 ~ [50 55]>"  # feedback (range 0.5 1.5 sine)
              # s "neutron" # amp (fast 2 $ range 0.2 0.6 saw)
              |+note (choose [0, 0, 5, 7, 12])
              # atk 0.1 # rel (range 1.2 3.2 rand) |* rel 0.25
              # lpres 0.2
              # drive 0.6
              # dsend 0.8 # rsend 0.5
  d3  $ off (1/16) ((|+ note 0).(|* amp 0.5). (#detune 1.02))
    $ fast "1" $ neutron  |* amp 0.4

d3 -- $ (sometimes $ off (1/16) ((|+ note 0) .(|* amp 0.9)))
  $ every 2 (|* amp 0.0)
   $ almostNever (plyWith "2" ((|* amp 0.9).(|+note 7))) $ sometimes (fast 2)
    $ fast 1
    $ note "[<55 61>,58](5, 8, 2)"
    # s "ninin"
    |+ note (choose [0, 12])
  # amp 0.09 # width (range 0.01 0.6 rand)
  # feedback (range 0.6 1.5 rand)
  # dur 0.1 # lpres (range 0.01 0.7 sine)
  # lpfreq (range 1500 3500 rand)
  # atk 0.01 # rel (range 0.05 0.8 rand)
  # decay (range 0.1 0.9 rand)
  # detune 1.02 # dsend 0.7 # rsend 0.5

d3   $  slow 1.0 $ jux rev $ every 2 (fast 2)
  $ s "<dreamy>(<1 2>, 8)"
  # note "<<65 ~><66?0.75 68>>" -- |+ note "<-12 <-12 0>>"
  |+ note "<-12 0 12?0.5>" # amp (slow 2 $ range 0.2 0.7 sine)
  -- |- note 12
  -- |+ note "-12"
  # amp "<0.64 0.44>" # pan (range "-0.25" 0.25 rand)
  -- # amp 0.3
  # detune (slow 2 $ range 0.995 1.0015 sine)
  # nSynths (choose [9, 3, 5, 7])
  # pan (range "-0.8" 0.8 rand) # dur 0.3
  # atk (slow 8 $ range 0.05 0.1 tri) # rel (range 0.4 1.2 rand)
  # lpfreq (slow 4 $ range 3000 4000 sine) # drive 0.5 # bias 0.02
  # flutter 4.25 # flutterdepth "-0.85"
  # dsend 0.5 # rsend 0.5
  |* amp 0.7
  -- # dsend 2.5 # rsend 2.5

d4 silence

d3 silence

-------------------------
-- tecno3

d3 silence

bpm 147
d2 silence

hush

all $ (#nudge "-0.06")

d3 -- $ (every  (jux rev))
  -- $ rev
  $ jux (rev . (|* freq 0.5) .(|* amp 0.7) )
  $ slow 2 $ struct "~ ~ ~ t [~ ~ ~ t][~ ~ ~ ~] [t] ~ t ~"
  $ s "tecno3" # amp (fast 4 $ range 0.05 0.2 tri) |* amp 0.7
  +| freq (100 - (( run 5) *2 )) |- freq (range "-0.125" 0.125 rand)
  |* freq 6
  -- # atk (slow 8 $ range 0.01 0.2 sine) # rel
  -- (slow 8 $ range 0.01 0.2 rand)
  -- # decay 0.2 # sus 0.001 # rel 2
  # adsr' (sinosc 0.03 0.2 0.1725) 0.1 0.1 (randosc 0.1 0.3)
  # pan (range "-0.25" 0.25 rand) # drive' 0.5 0.3 0.1 0.1
  +| feedback (slow 8 $ range 0.2 1.6 tri)
  # dsend 1.5 # rsend 0.8
  # lpf' 1500 0.1

d3 silence

do
  let padstecno3 =
                every 8 (
                plyWith "<2 2 2 <2 2 3>>" (
                  (|* amp 0.95).(|* freq "<1.5 1.5>").(# atk 1.2).(# rel 7)
                  )
                  )
                -- $ slow 4 $ struct "t(3, 16, 0)"
                $ struct "t/2"
                $  freq "<[300, 450]!8 [100, 150]!8> " # s "padstecno3"
                |* freq "<1.0 1.5 1.5>" # lpfreq 4900
                # atk 0.85 # rel 5.5 # dur 2.4
                # width (slow 8 $ range 0.01 0.7 sine)
                # amp (slow 8 $ range 0.1 0.4 sine) # dsend 0.35 # rsend 0.8
                # nudge (range "-0.2" 0.2 rand)
  d4 $ padstecno3 |* amp 0.4

do
  let tek03 = struct "t*8?0.05"
              $ s "tecno3" # amp (fast "<2 4>" $ range 0.3 0.5 tri)
              |+ freq (choose [50, 80, 100, 120, 150])
              |- freq (range "-0.25" 0.25 rand)
               |* freq 2
              # atk (slow 8 $ range 0.001 0.1 sine) # rel (slow 8 $ range 0.01 0.2 rand)
              # decay 0.01 # sus 0.0125 # rel 0.1
              # pan (range "-0.25" 0.25 rand) # drive 0.1
              +| feedback (slow 8 $ range 0.5 1.5 tri)
              # dsend 0.4 # rsend 0.3
              |* amp 0.8
  d3 -- $ jux rev
    -- $ off (1/8) (|+ note 0)
    $ tek03 |* amp 0.5


-- felicidad
do
  let felicidad = struct "t t ~ t t t t ~ t ~"
              $ s "tecno3" # amp (fast 4 $ range 0.054 0.16 tri)
              +| freq (( run 7 + 1) *20 ) |- freq (range "-0.25" 0.25 rand)
              |* freq (choose [6])
              # atk (slow 8 $ range 0.001 0.01 sine) # rel (slow 8 $ range 0.01 0.2 rand)
              # decay 0.02 # sus 0.001 # rel 0.02
              # pan (range "-0.25" 0.25 rand) # drive 0.1
              +| feedback (slow 8 $ range 0.2 1.6 tri)
              # dsend 1.5 # rsend 0.5
  d4 -- $ jux rev
     $ rev
     $ off (1/16) (|* amp 0.75) $ off (1/16) (|* amp 0.75) $ off (1/8) (|* amp 0.75)
    $ felicidad |* amp 0.1

d4 silence

d3 silence

-------
-- jungle

all $ (# nudge "-0.06")

bpm 152

let bassdk2 = buf "0*8" # s "dk2bass"
          # rate "<0.333!8 0.555!8>*2 ~~ 0.333*4"
          # amp 0.2 # drive 0.3 # bias 0.01 # dur 0.25
    breaks = buf "0 2 4 6 8 10 12 14 16 18 20 22 24 26 <28 [28 28]> 30"
            # s "amencutup" # amp ((run 10) / 30) # rsend 0.1 # dsend (range 0.0 0.3 rand)
            # rate "4 3 2 <1.5!4 1.33!4>" # dur 0.1 # atk 0.02
            # drive 0.8 # bias 0.1
    guitars1 = struct "t(7, 8)" $ stack[
                buf "8" #pan "-0.7" # rate 0.3331,
                buf "8"  # pan 0.47 # rate 0.3333
            ] # s "dk2guitar" # amp 0.1 # dur 0.2
            |* rate (choose [1.0, 1.5, 2.0, 3.0, 4.0])
            # rsend 0.7 # dsend 0.2
    guitars2 = struct "t(3, 8)" $ stack[
                buf "4" # pan "-0.7" #rate 0.3331,
                buf "4" # pan 0.47 # rate 0.3333
              ] # s "dk2guitar"  # amp 0.07 # dur 0.25
              |* rate (choose [1.0, 1.5, 2.0, 3.0, 0.5])
              # rsend 0.7 # dsend 0.2


do
  hush
  -- x1 $ mute $ breaks
  d2 $ bassdk2
  d3 $ sometimes (|* rate "-1.0")
     $ almostNever (plyWith "<4 2>" ((|* amp 0.97)))
     $ guitars1 |* amp 0.5
  d4 $ almostNever (plyWith "2" ((|* amp 0.95)))
     $ guitars2 |* amp 0.25


let breaks = buf "0 2 4 6 8 10 12 14 16 18 20 22 24 26 <28 [28 28]> 30"
           |+ buf 2
           # s "amencutup" # amp ((run 10) / 30) # rsend 0.1 # dsend (range 0.0 0.3 rand)
           # rate "4 3 2 <1.5!4 1.33!4>" # dur 0.1 # atk 0.02
           # drive 0.8 # bias 0.1
    discreet = off (1/16) ((|+ note 7) .(|* amp 0.9))$ every 4 (|- note 5)
            $ note "[62, 65, 69](3, 8 ,1)"
            # s "discreet3" # amp 0.03
            # detune 1.515
            # atk 0.01 # sus 0.5 # dur 0.35 # rel 1.25
            # rsend 0.95 # dsend 0.95
            # lpfreq 6500 # drive 0.2 # bias 0.01

do
  let globalamp = 0.9
  d1 $ breaks |* amp globalamp |* amp 0.6
  d3 $ discreet |* amp globalamp

do
  let kick = struct "t ~ t [~ t] ~ t t ~"
            $ buf "0" # amp 0.1 # low 0.1 # drive 0.2
      snare = buf "~ 13 ~ <13 13 14 13>"
            # amp 0.06 # drive 0.2 # low 0.2 # high 0.3
            # rsend 0.3
      ride = buf "10*8" # amp "{0.02 0.005}%8" # pan (range 0.1 0.2 rand)
      diddy = buf "<1 <2 2 3> 5>"
            # amp 0.04 # rsend 0.7
            # dsend 0.9
            # lpfreq 3000
      stuff = sometimes (# pan (range "-0.7" 0.7 rand ))
            $ buf "<<~ 12> ~!15>  1 ~ <1!7 [2 <6 8>]>"
            # amp 0.04 # rate 0.33
            # atk 0.01 # rsend 0.5 # dsend (randosc 0.4 1.2)
      timbal = buf "~ ~ <~!1 [~ 9]> 9" # rate 0.331 # amp 0.1
  -- x5 silence
  d1 $ stack [
      -- kick # s "datakick" # rate 1.0,
      snare # s "dk2jungle" # rate 0.66,
      ride # s "dk2jungle" # rate 0.33,
      diddy # s "dk2jungle" # rate 0.33,
      stuff # s "dk2jungle" # rate 0.33
      -- timbal # pan "-1.0", rev $ timbal # pan "1.0"
    ]
   # lpfreq 6500 |* amp 0.8 # drive' 0.1 0.1 0.1 0.2 -- 1.0
   # rsend (choose [0.0, 0.5, 1.0])

  -- x3 silence
  x4 silence

d4 silence

do
  let strings =
              sometimes (jux ((|+ note 9). (|* amp 0.5))) $
              struct "t*8?0.01"
              -- $ buf (range 99 "<73 80>" tri)
              $ buf "[96 91 86 81 76 <86 86 98> 91 96 95 88 86 81 81 83 91 95]/2"
              -- $ buf (range 97 "<71 79>" tri )
              # s "dk2piano"
              # amp (fast 4 $ range 0.2 0.4 tri)
              # dur (slow 2 $ range 0.14 0.7 sine)
              -- # rate "[0.371, 0.555]"
              # rate 0.666 -- |* rate 0.5
              |* rate (choose [0.25, 0.25, 0.5, 0.5, 0.5, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.25])
              # atk 0.02 # rel 0.7
              # lpf' (sinosc 850 3500 0.125) 0.3 # drive 0.05 # bias 0.05
              # dsend (randosc 0.35 0.99) # rsend 0.9
  d3 $ strings |* amp 0.8

do
d1 silence
d2 silence
d3 silence
d5 silence

hush

---
------------------------
-- recreo

bpm 152

all $ (# nudge "-0.06")

d3 silence
d4 silence

d1 --  $ sometimes (off (1/32) ((|* amp 0.95)))
  $ stack[
  struct "t*4" $ s "datakick" # buf 6 # adsr' 0.02 0.1 0.1 0.1 # amp 0.2
  , fast 2 $ s "~ datach <~ datach> dataoh" # buf "2 6" # amp 0.1 # adsr' 0.02 0.1 0.1 0.1
  ] # lpf' 1500 0.3

d2 -- $ off (1/16) ((|+ note 0).(|* amp 0.9))
  $ struct "t*8"
  $ feedback (sinosc 0.5 2 0.125)
  $ whenmod 16 4 ((# note "31 31 31 29"))
  # s "filmbassNuevo2"
  # note "<32 35 35 36> 32 31"
  # amp 0.01 # detune (randosc 0.99 1.01)
  # adsr' 0.01 0.2 0.3 0.2
  # dur 0.13
  # drive' 0.5 0.01 0.3 0.3
  # lpf' (randosc 550 2250) (sinosc 0.85 0.95 2)
  -- |+ note 0

do
  let padstecno3 = slow 4 $
                every 7 (|+ note 3) $
               whenmod 16 4 ((# note "[59, 68]")) $
               struct "t(5, 8)"
                $ note "[61, 67]" # s "padstecno3"
                -- # lpfreq 7900
                # lpf' (sinosc 2500 7900 0.125) 0.5
                # atk 0.01 # rel 0.7 # dur 0.3
                # width (slow 8 $ range 0.01 0.7 sine)
                # amp (slow 8 $ range 0.2 0.3 sine) # dsend 0.7 # rsend 0.8
                # nudge (range "-0.2" 0.2 rand)
                # drive' 0.3 0.01 0.01 0.2
  d3 $ padstecno3 |* amp 0.2

d2 silence

hush

-- infernoise
do
  let infernoise = struct "t t t t" $  note "<45!3 38!5>/4" |+ note 12
                # s "<infernoise2!6 infernoise2!6>"
                -- # s "infernoise2"
                # amp 0.1 # dur 0.5
                # atk 0.1 # rel 1.5
                # ampmodfreq (choose [1.0, 1.0, 2.0, 3.0])
                # ampmoddepth 0.4
                # vibratofreq 0.5 # vibratodepth 0.1
                # drive 0.3 # bias 0.1 # high 0.2 # low 0.1
      melatact = note ( select ("<1!8 2!8>"/2) [
                    "~ ~ 57 ~ <~ [48 50]> ~ <60 ~> ~",
                    "~ [~ 65] 64 ~ <[55 54] ~> ~ <60 ~> <~ [~ <69 ~ 71>]>"
                  ])
      atactrueno = melatact # s "atactrueno" # amp "<0.5 1.5>"
                |* amp 2
                # atk 0.01 # decay 0.1 # rel 0.5
                # atklpg "<0.01!2 0.02 0.04>"
                # lpfreq (slow 8 $ range 1000 3500 sine)
                # rsend 0.5 # dsend 0.5
                # drive 0.5 # bias 0.01
      rayohielo = struct "t*16?0.75"
                $ select ((
                  wchoose [
                  (1, 0.5), (2, 0.35), (3, 0.15)]
                  )/3) [
                  note "52" # amp 0.2,
                  note "55" # amp 0.1,
                  note "[<65 67>, 72]" # amp 0.2 # rel 2.5 # rsend 0.8
                  |+ note (choose [0, 12])
                  ] -- # amp 0.4
                # s "soft" # drive 0.4 # high 0.3
                # dsend 0.7
  d1 $ infernoise |* amp 0.1
  d2 $ mute  $ rarely ( plyWith "[2 2 4?0.25 ~]" (|* amp 0.8) .(|* rel 0.9) . (|* lpfreq 0.5))
      $ every 8 (rev) $ slow 2
      $ atactrueno |* amp 0.00
  d3  $ mute $ degrade $ degrade $ slow 4 $ rayohielo |* amp 0.05

x4 silence
d3 silence
d1 silence

x1 silence

-- do re sol la
do
  let punk = off (1/8) ((|+ buf "7 9"). (|* amp 0.99)) $ struct "t(8, 8)"
          $ s "labsquad" -- # buf "[0, 6]"
          # buf "52"
           # rel 0.1 # amp 0.3 # atk 0.1 # dur 0.2
           # drive 0.1 # bias 0.01 # dsend 0.85 # rsend 0.8
  d1 $ punk # lpf' 4500 0.01

do
  let punk = struct "t*16"
          $ s "labsminipunk" -- # buf "[0, 6]"
          # buf "0 0 1"
          --  # buf "-8"
          |+ buf 38 # stack [rate 1.0, rate (sinosc 0.99 1.01 0.125)]
           # rel 0.05 # amp 0.4 # atk 0.05 # dur 0.07
          # lpfreq 4500 # lpres 0.01
           # dsend 0.01
           # drive 0.3 # bias 0.01
  d1 $ punk

silence

do
  let
    tambourines = stack [
      buf "0*8" # s "tambourine" # pan "-0.8" # atk 0.3,
      buf "2*8" # s "tambourine" # pan "0.8" # atk 0.3
      ] # amp "{0.1 0.05 0.07}%16" # rsend 0.1
  -- x3 $ mute $ slow 4 $ always (|- note 12) $ rarely (|+ note 7)
  --   $ note "[<64!7 72>, 67, <71!2 74>]" # s "<discreet3>"
  --   # atk 3.2 # sus 0.2 # dur 4.5 # rel 6.5 # amp 0.03
  --   # lpfreq 3500 # lpres 0.1 # drive 0.3 # high 0.2
  --   # rsend 0.7 # dsend 0.9
  --   # ampmodfreq (choose [2, 2, 3, 4, 8])
  --   # ampmoddepth (range 0.01 0.5 rand)
  --   # flutter (choose [0.25, 0.5, 1, 2, 4] ) # flutterdepth "-0.5"
  d4 $ slow 1 $ stack [
    tambourines
    ] |* amp 0.9

bpm 155

all $ (# nudge "-0.07")

hush

do
  -- hush
  let discreto = slow 4 $ s "discreet"
                 # freq "[<204 508>, <301 250>, <<505 552> <<600 300> 350>>]"
                 # detune "1.01 0.99 <0.5 1.51>"
                 # detune (slow 2 $ range 0.98 1.01 sine)
                 # atk 3.8 # rel 9.5 # decay 0.9 # sus 0.5
                 # lpfreq 6100 # lpres 0.2
                 # amp 0.03 -- 0.02
                 # rsend 2.0 # dsend 0.85
                 # drive' 0.4 0.2 0.01 0.2
  d4 -- $ off (1/8) ((|* amp 0.55))
    $ discreto |* amp 1.1 -- 0.4

d5 $ every 3 rev $ slow 16
  -- $ almostNever (
  -- (|+ note (12 + 7)). (|* amp 0.2). (# rsend 1.5) . (# dsend 1.2)
  -- )
  -- $ rarely (|+ note "<7 12>")
  -- $ rarely (plyWith "<2 3>" ((|* amp 0.9) . (|+ note 7)))
  $ stack [
  s "otroinvert(7, 8, <0 2>)" # detune 0.995 # pan "-1.0",
  s "otroinvert(7, 8, <2 0>)" # detune 1.005 # pan "1.0"
  ]
  # note "{58 61 63 68 70}%8"
  |+ note "<-12 -0 -12 0 -12 -5>"
  |+ note (choose [0, 7, 9])
  # amp 0.02-- 0.065 --- 0.009
  # drive 0.8
  # bias 0.3
  # width (slow 2 $ range 0.01 0.15 sine)
  # lpfreq (slow 6 $ range 4500 3500 tri) # lpres 0.3
  -- # atk 7.5 # rel 10.5
  # atk 7.5 # rel 9
  # dsend 1.5 # rsend 0.8


hush
