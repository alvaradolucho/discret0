--------------------------------------------------------------------------
-- aut4@fosfeno
hush
-- wavetable

bpm 135

all $ (#nudge "-0.02")

d1 $ metro |* amp 0.2

d1 silence

do
  let kick = struct "t ~ ~ ~ <t [t ~ t ~]> ~ ~ <~ [ <~ t ~ > <~ t>]>"
        -- struct "t t ~ t t t ~ t"
        $ s "amencutup" # buf 0 # adsr' (range 0.0001 0.01 rand) 0.1 0.6 0.05 # dur 0.11
        # lpfreq 7000 # lpres 0.2 # low 0.1 # drive 0.2 # rsend 0.2 # begin "-0.2"
      snare =
        rarely (off (1/16) (|* rate (sinosc 0.94 1.08 0.0125)) .(|* amp 0.95) .(|* lpfreq 0.5) .(|* dur 0.85))  $
         sometimes (plyWith "<2 2>" ( (|* amp 0.3) . (|* dur 0.8) .(|* rate (sinosc 0.98 1.02 0.125)) ))$
        struct "~ t ~ <t [t ~ <t ~ > <t ~>]>"
        -- fast "<0.5!3 1>"
         -- struct "~ ~ ~ t ~ ~ t ~"
        $ s "amencutup" # adsr' (range 0.0001 0.001 rand) 0.1 0.8 0.1 # dur (randosc 0.18 0.23) # buf 2
        -- |+| rate (randosc 1.9 3.7)
        # begin "-0.15"
        # rsend (randosc 0.1 0.9) # lpfreq 8000
      tambourines =  sometimes (|* amp 0.5) $ sometimes (|* amp 0.75)
        $ stack [
        struct "<~ t> t t t t t t t <t ~> t t t t t t t" $ buf "7" # pan "-0.9" # amp (triosc 0.05 0.2 0.25),
        struct "~ t ~ t t t t t t t t t t ~ t t" $ buf "2" # pan 0.9 # amp (sinosc 0.15 0.35 0.5)
        ] # s "tambourine" # adsr' 0.01 0.1 0.8 0.15
        # rsend (randosc 0.1 0.6) # hpfreq 400 # begin "-0.1" # dur 1
        # rate 0.87 -- # rate (choose [1, 2,3, 0.5, 0.75,1,5,1,5,5 ])
  d1 -- $ sometimes (plyWith "4" (|* amp 0.99) )
    -- $ degrade $ degrade
    $ stack [
      -- sometimes (plyWith "<2 4>" ((|* amp 0.7) . (|* dur 0.85) . (|* rate 1.01)))$
      -- rarely (off (1/16) (|* amp 0.8 ))
      -- $ kick # amp 0.2 -- ,
      snare # amp 0.2 -- ,
      -- always (degradeBy 0.95) $ slow "<2 2 [2 1]>" $ tambourines # lpf' (randosc 5500 10500) (triosc 0.2 0.6 0.125)
    ]
    # drive 0.5 # low 0.1 # high 0.1 #  bias 0.2
    |* amp 0.7

hush

d1 $

d1 $ metro |* amp 0.4 # adsr' 0.001 0.1 0.8 0.1 # begin "0.028" # dur 0.2

d3 silence

do
  let chord = -- select ("<1 1 1 1 1 <2 3>>"/2)
              select ("4"/4)    [
                "[62, 67, 69, 72]", "[53, 64, 67, 72, 81]",
                "[65, 67, 74, 50]",
                "[<62 74 72>, <67 55 69>, <69 65>, <72 72 60>]"
                ]
  let wv = note chord
          |+ note (choose [0, 0, -12, -12, 0, -12, 12])
          -- # buf 2
          -- # buf (choose [2, 5, 7, 10])
          # buf (run 9)
          # amp 0.2
          # det (range 0.01 0.15 rand)
          # s "wv"
          # dur (range 5.5 9.6 rand)
          # pan (range "-1.0" 1.0 rand)
          |* pan (sinosc 0.8 0.95 0.25)
          # atk (randosc 2.5 5) # decay (sinosc 0.8 2.4 0.25)
          # rel (sinosc 8.5 6.5 0.25)
          # curve (randosc "-5" "-2")
          # lpfreq (sinosc 1800 5500 0.0125)
          # lpres (range 0.5 0.7 rand)
          # rsend 0.9 # dsend 0.8
          # tremolofreq (choose [1, 2, 0.25, 0.5, 4, 8, 4, 4, 0.25])
          # tremolofreq (choose [4, 8, 8, 16, 12, 8, 8, 8, 4])
          # tremolodepth (randosc 0.01 0.15)
          # vibratodepth (randosc 0.985 1.01)
          # vibratofreq (choose [4, 0.25, 4, 0.125, 2, 0.5, 8, 8])
  d3 $ sometimes (
      (slow "<2 3 4 6>"). (|* dur "<4 6 8 12 16>") .
      (|* rel "<2.5 4 5 7>"))
    -- $ sometimes (|- note "<-12 -12 <-24 -19>>")
    -- $ note (chord + "<1!3 3 8>")
    $ wv -- # amp 0.02
    |+ note "<24 12 24 19>"
    # drive 0.75 # bias 0.22 # high 0.1 # low 0.2
    |* lpfreq (sinosc 0.85 0.65 0.125)
    -- # amp (sinosc 0.01 0.028 0.0125)
    # amp (sinosc 0.02 0.015 0.0125)
    |* amp 1.2 -- 1.4

hush

#

d4 silence

do
  let chords = [62, 67, 69, 72, 76]
      duration = "<4 6 2>"
      -- duration = "<2 3 2>"
  d4 $ slow "<1.5 3>" $ slow duration $ always (|- note 12)
      $ plyWith "2" (|* amp (range 0.7 0.99 rand))
      $ struct "t"
      $ note (choose chords )
      # s "harmonic"
      # amp (slow 12 $ range 0.15 0.3 tri) |* amp "<0.7 0.5>"
      |* amp 1.0
      # dur (duration) # atk (randosc 1.5 2.5)
      # rel (randosc 4.5 6.2)
      # lpfreq (slow 6 $ range 1200 3600 sine)
      # lpres 0.5
      # pan (randosc "-0.7" 0.7)
      # firstharm (choose [1, 2, 3])
      # grow (range 0.1 0.35 rand)
      # dsend 1.1 # rsend 0.8
      # freqmod 1 # octmod (choose [1, 3, 2, 4])
      # octmod 1
      # detune 0.96
      # flutter 0.4

d3 silence
hush

----------------------------------------------
-- tek04

let xo1 = "65 ~ 65 65 68 <~ 65> <65 ~> 65 ~ <65 71> ~ 65 65 65 65 ~"
    xo2 = "65 ~ 71 65 68 <~ 65> <65 ~> 65 ~ <65 71> ~ 65 68 68 70 ~"
    xo3 = "[56, 59](<11, 7>, 16, <0, 2>)"
    xo4 = "~ ~ 64 ~ ~ 64 64 ~ ~ ~ 65 ~ ~ ~ 65 ~ ~ ~ 65 ~ ~ ~ 65 ~"

d1 $ sometimes (slow 1) $ buf "0 1 0 1 0 0 <1 0> 1 0 0 1 1 0 0 1 1" #  s "linn" # amp 0.1
  # lpf' (triosc 4200 9500 2) (randosc 0.2 0.78)
    |* amp 0.045 # rate 1.125

d3 $ every 4 (# note xo1) $ note xo2
    # s "aaa3" # amp 0.1 # detune (choose [1.5, 1.01])
    # adsr' (randosc 0.0001 0.1) 0.1 0.1 0.2
    # dsend 0.5 # lpf' 2000 0.8 # width (sinosc 0.01 0.1 0.125) -- 0.5
    # hpfreq 250
    # pan (choose [-1.0, 1.0]) |* pan 0.5
    |* amp 0.0

d4  $ every 4 (# note xo2) $ note (xo1 + "12 24") |+ note "<0 -12>"
    # s "aaa3" # amp 0.4 # detune (choose [1.5, 1.01, 0.99])
    # adsr' 0.001 0.12 0.2 0.1
    # dsend 0.9 # lpf' 4000 0.1
    # pan (choose [-1.0, 1.0]) |* pan 0.5

d3 silence
d4 silence

d3 $ every 4 (# note xo1) $ note (xo3 + 12) -- xo2
    # s "aaa3" # amp 0.08 # detune (choose [1.5, 1.00])
    |+ note "<<-5 -7> 0>"
    # adsr' 0.05 0.2 0.3 0.2
    # dsend 0.4 # lpf' 9000 0.1 # hpfreq 550
    # drive' 0.2 0.12 0.01 0.08
    # pan (choose [-1.0, 1.0]) |* pan 0.5

d3 silence
--------------------------------------------------------------------
-- robot
bpm 139

d1 silence

d3 -- $ every 8 (slow 2) $ every 4 rev $ every 2 (jux rev) $ every 4 rev $ slow 2
  -- $ note "[[59 57] [54 55] [54 52] [54 52]]!2" |+ note "<0 12>"
  -- $ note "[[59 57] [54 55] [61 61], [54 52] [54 52], [49 49]]!4"--  |+ note "<0 12>"
   $ fast 2
   $ every 4 (jux rev)
    $ note "[<59 57>(3, 8, <1 3>),  <61 63 64>(<5 7>, 8, 2)]"
  -- $ note "[[59 57] [54 55] [54 52] [54 52]]!2" |+ note "<0 12>"
  -- $ note "[[59 57] [54 55] [61 61], [54 52] [54 52], [49 49]]!4"--  |+ note "<0 12>"
   -- |+ note "<-12 0 12 <0 <12 24>>>"
   |+ note "<-12 0 12 0>"
  # s "aaa"
  #  amp (range 0.007  0.15 rand)
  |* amp 0.3
  # atk 0.02 # rel "<0.05, 0.17>"
  # formantfreq (randosc 2400 4800) # width 0.1
  # detune (randosc 0.98 1.02) |* detune "<1 1.01>"
  # pw "0.8 0.6 0.9"
  # shape (range 0.4 1.8 rand) |* shape 0.2
  # lpfreq "<2000 1200 500 1000>" |* lpfreq "0.5 0.75" |* lpfreq 4.2
  # lpres 0.6
  # hpfreq 120
  # dsend 0.6 # waveshape 0.2
  # rsend 0.4
   # vibratodepth "-0.2 -0.5"

d4 silence

d4 $ sometimes (|* amp 0.5) $ every 3 (fast 4)
  $ note "[69, 55](<7 5 9>, 16, <2, 0, 5>)"
  # s "aaa"
  |+ note "<0 -12 -12 <12 7>>"
  # amp 0.15 |* amp 0.4 # width 0.9
  # pan (range 0.0 1.0 rand) |* pan 1.0
  # atk "0.001 0.01 0.01"
  # rel 0.1 # vibratofreq 2.4 # vibratodepth "-0.1"
  # lpfreq (range 4550 1200 sine ) |* lpfreq 0.7
  # hpfreq 350
  # dsend 0.4

  d4 silence

do
  let robot = -- slow 2 $ rarely (slow 2) $
            jux rev $ s "<aaa aaa2>(<9 11>, 16, <0 2>)?0.5"
            # note (choose [55, 57, 62, 65, 67])
            |+ note "{12 0 7}%8" |+ note "<-12 0 0 7>"
            # detune "1.01 0.99" # dur 0.5 |* detune 0.5
            # atk 0.4 # rel 2.8
            # lpfreq (sinosc 2200 2800 0.125) -- (slow 8 $ range 1200 4800 sine)
            # lpres 0.1
            # rsend (range 0.9 1.5 rand) # dsend 1.5
  let liquidos = slow 2
            $ note "[<69 67 74>, <62, 64, 59>]" |+ note "<0 7 12>"
            |+ note "<12 0>"
            # s "soft" # amp 0.32 # detune "<1.01 0.991>"
            # atk 2.5 # rel 7.5
            # lpfreq 1800 # freqmod 1.01 # flutterdepth 0.985
            # rsend 0.85 # drive' 0.01 0.01 0.01 0.01
  d1 $ mute $ slow 2 $ rarely (slow 2) $ ((# adsr' 0.4 0.4 0.2 1.8).(|* amp 0.7))
    $ robot |* amp (choose [0.3, 0.125, 0.05])
    |* amp 0.1
    -- # adsr' 0.01 0.1 0.4 0.5 # dsend 1.2
  d2  $ liquidos |* amp 0.01

hush

do
  d3 silence
  d4 silence

-------------------------------------
--- tek01

-- supercollider


-------------------------------------
--- tek02

bpm 143

d1 -- $ sometimes (plyWith "1" ((|* amp 0.9) .(|*rate 2)))
  $ struct "[~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ <~ t> ~ <t ~ ~ >]/2"
  $ buf "2 1 1 1"
  # s "dataclap" # drive 0.5 # lpfreq 5000
  # rate 1
  # amp 0.02575 # dsend 0.1

do
  let neutron = plyWith (choose [2]) (
              (|* amp 0.9) .(|+ note "<5 7>")
              )
              $ sometimes (
                jux (# note (range 60 70 sine))
                )
              $ note "<[50 55]!2 ~ [50 55]>"
              # feedback (range 0.8 1.8 sine)
              # s "neutron" # amp (fast 2 $ range 0.2 0.6 saw)
              |+note (choose [0, 0, 5, 7, 12])
              # atk 0.1 # rel (range 1.2 3.2 rand) |* rel 0.125
              # lpres 0.6
              # drive 0.7
              # dsend 0.8 # rsend 0.8
  d3 $ off (1/16) ((|+ note 0).(|* amp 0.5). (#detune (randosc 0.99 1.02)))
    $ fast "1" $ neutron  |* amp 0.1

d3  $ (sometimes $ off (1/16) ((|+ note 0) .(|* amp 0.9)))
  $ every 2 (|* amp 0.0)
   $ almostNever (plyWith "2" ((|* amp 0.9).(|+note 7))) $ sometimes (fast 2)
    $ fast 1
    $ note "[<55 61>,58](5, 8, 2)"
    # s "ninin"
    |+ note (choose [0, 12])
  # amp 0.04 # width (range 0.01 0.6 rand)
  # feedback (range 0.6 1.5 rand)
  # dur 0.1 # lpres (range 0.01 0.7 sine)
  # lpfreq (range 1500 5500 rand)
  # atk 0.01 # rel (range 0.05 0.8 rand)
  # decay (range 0.1 0.9 rand)
  # detune 1.02 # dsend 0.7 # rsend 0.5

d3   $  slow 1.0 $ jux rev $ every 2 (fast 2)
  $ s "<dreamy>(<1 2>, 8)"
  # note "<<65 ~><66?0.75 68>>" --  |+ note "<0 <12 0>>"
  |+ note "<-12 0 12?0.5>" # amp (slow 2 $ range 0.2 0.7 sine)
  -- |- note 12
  -- |+ note "-12"
  # amp "<0.64 0.44>" # pan (range "-0.25" 0.25 rand)
  -- # amp 0.3
  # detune (slow 2 $ range 0.995 1.0015 sine)
  # nSynths (choose [9, 3, 5, 7])
  # pan (range "-0.8" 0.8 rand) # dur 0.6
  # atk (slow 8 $ range 0.05 0.1 tri) # rel (range 0.4 1.2 rand)
  # lpfreq (slow 4 $ range 3000 7000 sine) # drive 0.5 # bias 0.05
  # flutter 4.25 # flutterdepth "-0.85"
  # dsend 0.5 # rsend 0.5
  |* amp 0.5
  -- # dsend 2.5 # rsend 2.5

-------------------------------------------------------------------
-- tek03
bpm 147

all $ (#nudge "-0.035")

d3 silence

d1 $ metro |* amp 0.2

hush

d1 silence

d3 -- $ (every  (jux rev))
  -- $ rev
  -- $ jux (rev . (|* freq 0.666) .(|* amp 0.9) )
  -- $ degrade
  -- $ plyWith "[4 ~ ~ ~]" (|* amp 0.8)
  $ slow 2 $ struct "~ ~ ~ t [~ ~ ~ t][~ ~ <~ ~ ~ ~ ~ ~ t> ~] [<t t t t t ~>] ~ <t t> ~"
  $ s "tecno32" # amp (fast 4 $ range 0.05 0.2 tri) |* amp 0.9
  # freq (100 - (( run 5) *2 )) |- freq (range "-0.125" 0.125 rand)
  -- |* freq "4.5"
  |* freq "<4.5!6 6!6>"
  -- # atk (slow 8 $ range 0.01 0.2 sine) # rel
  -- (slow 8 $ range 0.01 0.2 rand)
  -- # decay 0.2 # sus 0.001 # rel 2
  -- # adsr' 0.1 0.1 0.5 (randosc 0.1 0.3)
  # dur 0.3
  # atk (randosc 0.01 0.2) # decay 0.1 # sus 0.7 # rel 0.5
  # pan (range "-0.25" 0.25 rand) # drive' 0.5 0.3 0.1 0.1
  |+| feedback (slow 8 $ range 0.2 1.6 tri)
  # dsend 0.9 # rsend 0.8
  # lpf' 2500 0.1
  |* amp 1.3

d3 silence

do
  let padstecno3 =
                every 8 (
                plyWith "<2 2 2 <2 2 3>>" (
                  (|* amp 0.95).(|* freq "<1.5 1.5>").(# atk 1.2).(# rel 7)
                  )
                  )
                -- $ slow 4 $ struct "t(3, 16, 0)"
                $ struct "t/2"
                $  freq "<[300, 450]!8 [100, 150]!8> " # s "padstecno3"
                |* freq "<1.0 1.5 1.5>" # lpfreq 2900
                |* freq (choose [1, 1.01])
                # atk 0.25 # rel 1.5 # dur 0.4
                # width (slow 8 $ range 0.01 0.7 sine)
                # amp (slow 8 $ range 0.1 0.4 sine) # dsend 0.35 # rsend 0.8
                # nudge (range "-0.2" 0.2 rand)
  d4 $ padstecno3 |* amp 0.6

all $ (# nudge "-0.05")
d4 silence

do
  let tek03 = struct "t*8?0.1"
              $ s "tecno3" # amp (fast "<2 4>" $ range 0.3 0.5 tri)
              |+ freq (choose [50, 80, 100, 120, 150])
              |- freq (range "-0.25" 0.25 rand)
               |* freq "<3 3 2 2 2>"
              # atk (slow 8 $ range 0.001 0.01 sine) # rel (slow 8 $ range 0.01 0.2 rand)
              # decay 0.01 # sus 0.0125 # rel 1
              # pan (range "-0.25" 0.25 rand) # drive 0.1
              +| feedback (slow 8 $ range 0.5 1.5 tri)
              # dsend 0.7 # rsend 0.3
              |* amp 0.8
  d3 -- $ jux rev
    $ sometimes (off (1/8) (|+ note 12))
    $ tek03 |* amp 0.1

d3 silence

do
  let felicidad = struct "t t ~ t t t t ~ t ~"
              $ s "tecno3" # amp (fast 4 $ range 0.054 0.16 tri)
              +| freq (( run 7 + 1) *20 ) |- freq (range "-0.25" 0.25 rand)
              |* freq (choose [1.5])
              |* freq 2
              # atk (slow 8 $ range 0.001 0.01 sine) # rel (slow 8 $ range 0.01 0.2 rand)
              # decay 0.02 # sus 0.001 # rel 0.02
              # pan (range "-0.25" 0.25 rand) # drive 0.1
              +| feedback (slow 8 $ range 0.2 1.6 tri)
              # dsend 1.5 # rsend 0.5
  d4 -- $ jux rev
    $ rev
     $ degrade
    $ off (1/16) (|* amp 0.75) $ off (1/16) (|* amp 0.75) $ off (1/8) (|* amp 0.75)
    $ felicidad |* amp 0.0

d3 silence
d4 silence

bpm 152

hush


d1 $ metro # amp 0.2

all $ (# nudge "-0.06")

d3 silence
d1 silence

d1 --  $ sometimes (off (1/32) ((|* amp 0.95)))
  $ stack[
  struct "t*4" $ s "datakick" # buf 6 # adsr' 0.02 0.1 0.1 0.1 # amp 0.5
  , fast 2 $ s "~ datach <~ datach> dataoh" # buf "2 6" # amp 0.1 # adsr' 0.02 0.1 0.1 0.1
  ] # lpf' 1500 0.3
  |* amp 0.7

d2 $ sometimes ( off (1/16) ((|+ note "<0 0 12>").(|* amp 0.8)))
  $ struct "t*8"
  $ feedback (sinosc 0.5 2 0.125)
  -- $ whenmod 16 4 ((# note "31 31 31 29"))
  # s "filmbassNuevo2"
  # note "<32 35 35 36> 32 31"
  |+| note (choose [0, 12])
  # amp 0.07 # detune (randosc 0.98 1.02)
  # adsr' 0.01 0.2 0.3 0.2
  # dur 0.23
  # drive' 0.7 0.3 0.3 0.3
  # lpf' (randosc 550 3250) (sinosc 0.75 0.9 2)
  -- |+ note 0

d2 silence

do
  let padstecno3 = slow 1 $
                every 7 (|+ note 3) $
               whenmod 16 4 ((# note "[59, 68]")) $
               struct "t(<5 3>, 8)"
                $ note "[61, 67]" # s "padstecno3"
                -- # lpfreq 7900
                # lpf' (sinosc 2500 6900 0.125) 0.3
                -- |* lpfreq 0.5 |* lpres 1.3
                # atk 0.01 # rel 0.7 # dur 0.3
                # width (slow 8 $ range 0.01 0.4 sine)
                # amp (slow 8 $ range 0.2 0.3 sine) # dsend 0.7 # rsend 0.8
                # nudge (range "-0.2" 0.2 rand)
                # drive' 0.3 0.01 0.01 0.2
  d3 $ padstecno3 |* amp 0.001

d2 silence

d3 silence


--------------------
-- discreto

bpm 154

d1 silence
d4 silence
hush

d1 metro

do
  -- hush
  let discreto = slow 4 $ s "discreet"
                 # freq "[<204 508>, <301 250>, <<505 552> <<600 300> 350>>]"
                 # detune "1.01 0.99 <0.5 1.51>"
                  # detune (slow 2 $ range 0.98 1.01 sine)
                 # atk 3.8 # rel 9.5 # decay 0.9 # sus 0.5
                 # lpfreq 6100 # lpres 0.3
                 # amp 0.03 -- 0.02
                 # rsend 1.0 # dsend 0.85
                 # drive' 0.7 0.2 0.01 0.2
  d4 -- $ off (1/8) ((|* amp 0.55))
    $ discreto |* amp 0.4   -- 0.4

d5 $ every 3 rev $ slow 16
  -- $ almostNever (
  -- (|+ note (12 + 7)). (|* amp 0.2). (# rsend 1.5) . (# dsend 1.2)
  -- )
  -- $ rarely (|+ note "<7 12>")
  -- $ rarely (plyWith "<2 3>" ((|* amp 0.9) . (|+ note 7)))
  $ stack [
  s "otroinvert(7, 8, <0 2>)" # detune 0.995 # pan "-1.0",
  s "otroinvert(7, 8, <2 0>)" # detune 1.005 # pan "1.0"
  ]
  # note "{58 61 63 68 70}%8"
  |+ note "<-12 -0 -12 0 -12 -5>"
  |+ note (choose [0, 7, 9])
  # amp 0.002 -- 0.03
  # drive 0.8 -- 0.8
  # bias 0.3
  # low 0.22 # high 0.04
  # width (slow 2 $ range 0.01 0.15 sine)
  # lpfreq (slow 6 $ range 3500 2500 tri) # lpres 0.3
  -- # atk 7.5 # rel 10.5
  # atk 7.5 # rel 9
  # dsend 1.5 # rsend 0.8

hush
